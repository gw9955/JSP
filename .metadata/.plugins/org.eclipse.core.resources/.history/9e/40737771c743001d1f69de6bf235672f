<%@ page language="java" contentType="text/html; charset=UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<title>Insert title here</title>
</head>
<body>
   1. 파일 업로드를 위한 form 태그 내에 반드시 설정해야 하는 기법은 무엇인가?<br>
   - form 태그의 method 속성은 반드시 POST 방식으로 설정해야 합니다.<br>
   - form 태그의 enctype 속성은 반드시 multipart/form-data로 설정해야 합니다.<br>
   - form 태그의 action 속성은 파일 업로드를 처리할 JSP 파일로 설정해야 합니다.<br>
   - 파일 업로드를 위해 input 태그의 type 속성을 file로 설정해야 합니다.<br>
   	  만약 여러 파일을 업로드하려면 2개 이상의 input 태그를 사용하고 name 속성에 서로 다른 값을 설정합니다.<br>
   <hr />
   2. 파일을 서버에 업로드하는 처리 기법에 대해 간단히 설명하시오<br>
   - MultipartRequest를 이용한 파일 업로드<br>
     MultipartRequest 클래스를 이용하여 파일을 업로드하려면 먼저 MultipartRequest 객체를 생성합니다.<br>
          그리고 생성된 객체를 통해 MultipartRequest 클래스가 제공하는 메소드를 사용하여<br>
          웹 브라우저가 전송한 multipart/form-data 유형의 요청 파라미터를 읽어오고 파일을 업로드합니다.<br>
   - Commons-FileUpload를 이용한 파일 업로드<br>
    Commons-FileUpload를 이용하여 파일을 업로드하려면 먼저 Commons-FileUpload 패키지<br>
	에 포함되어 있는 DiskFileUpload 객체를 생성합니다. 생성된 객체를 통해 DiskFileUpload <br>
	클래스가 제공하는 메소드를 사용하여 웹 브라우저가 전송한 multipart/form-data 유형의<br>
	요청 파라미터를 가져옵니다. 그리고 FileItem 클래스의 메소드를 사용하여 요청 파라미터가 일반 데이터인지 파일인지 분석 및 처리하여 파일을 업로드합니다.<br>
   - textarea 태그<br>
    1) textarea 태그는 여러 줄의 텍스트를 입력할 수 있는 태그입니다. 가장 큰 특징은 입력 폼<br>
		안에 사용된 태그와 띄어쓰기가 그대로 출력된다는 것입니다.<br>
		cols/
   <hr />
   3. 폼 페이지에서 전송된 데이터를 전달받는 내장 객체와 관련된 메소드는 무엇인가?<br>
   - request 내장 객체<br>
    1) 요청 파라미터의 값 받기 : getParameter(요청 파라미터 이름), getParameterValues<br>
	2) 요청 파라미터의 전체 값 받기<br>
		메소드						형식						설명<br>
	getParameterNames()		java.util.Enumeration		모든 입력 양식의 요청 파라미터 이름을 순서에 상관없이 Enumeration(열거형) 형태로 전달받습니다.<br>
	hasMoreElements()					Enumeration(열거형)요소가 있으면 true를 반환하고, 그렇지 않으면false를 반환합니다.<br>
	nextElement()							Enumeration(열거형)요소를 반환합니다.<br>
   <hr />
</body>
</html>